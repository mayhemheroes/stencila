"use strict";(self.webpackChunk_stencila_help=self.webpackChunk_stencila_help||[]).push([[8550],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,m=s["".concat(d,".").concat(u)]||s[u]||h[u]||i;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},1180:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>d,metadata:()=>p,toc:()=>c,default:()=>s});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={},d="RESTful API",p={unversionedId:"other/REST",id:"other/REST",title:"RESTful API",description:"Headers",source:"@site/references/other/REST.md",sourceDirName:"other",slug:"/other/REST",permalink:"/references/other/REST",editUrl:"https://github.com/stencila/stencila/edit/master/help/references/other/REST.md",tags:[],version:"current",lastUpdatedBy:"Nokome Bentley",lastUpdatedAt:1620265603,formattedLastUpdatedAt:"5/6/2021",frontMatter:{}},c=[{value:"Headers",id:"headers",children:[],level:2},{value:"<code>GET /</code>",id:"get-",children:[],level:2},{value:"<code>GET /&lt;path&gt;</code>",id:"get-path",children:[],level:2},{value:"<code>GET /#&lt;id&gt;</code>",id:"get-id",children:[],level:2},{value:"<code>GET /~&lt;path&gt;</code>",id:"get-path-1",children:[],level:2},{value:"<code>GET /?&lt;query&gt;</code>",id:"get-query",children:[],level:2},{value:"<code>POST /</code>",id:"post-",children:[],level:2},{value:"<code>POST /.&lt;method&gt;</code>",id:"post-method",children:[],level:2},{value:"<code>GET /@</code>",id:"get--1",children:[],level:2},{value:"<code>GET /@&lt;name&gt;</code>",id:"get-name",children:[],level:2},{value:"<code>POST /@&lt;name&gt;</code>",id:"post-name",children:[],level:2},{value:"<code>DELETE /@&lt;name&gt;</code>",id:"delete-name",children:[],level:2},{value:"<code>GET /!</code>",id:"get--2",children:[],level:2},{value:"<code>POST /!&lt;name&gt;</code>",id:"post-name-1",children:[],level:2}],h={toc:c};function s(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"restful-api"},"RESTful API"),(0,i.kt)("h2",{id:"headers"},"Headers"),(0,i.kt)("p",null,"For all requests, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Content-Type")," of the response is the format specified by the ",(0,i.kt)("inlineCode",{parentName:"p"},"Accept")," header, defaulting to ",(0,i.kt)("inlineCode",{parentName:"p"},"application/json"),"."),(0,i.kt)("h2",{id:"get-"},(0,i.kt)("inlineCode",{parentName:"h2"},"GET /")),(0,i.kt)("p",null,"Get the content of the stencil."),(0,i.kt)("h2",{id:"get-path"},(0,i.kt)("inlineCode",{parentName:"h2"},"GET /<path>")),(0,i.kt)("p",null,"Get the content of a file within the stencil folder at path ",(0,i.kt)("inlineCode",{parentName:"p"},"<path>"),". Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"404")," if no file exists at that path."),(0,i.kt)("h2",{id:"get-id"},(0,i.kt)("inlineCode",{parentName:"h2"},"GET /#<id>")),(0,i.kt)("p",null,"Get the content of the stencil node with ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," property equal to ",(0,i.kt)("inlineCode",{parentName:"p"},"<id>"),". Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"404")," if no nodes has that id. Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"find"),"."),(0,i.kt)("h2",{id:"get-path-1"},(0,i.kt)("inlineCode",{parentName:"h2"},"GET /~<path>")),(0,i.kt)("p",null,"Get the content of the stencil node at the JSON Pointer path ",(0,i.kt)("inlineCode",{parentName:"p"},"<path>"),". Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"404")," if no node at the path. Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"select")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"lang: jsonptr"),"."),(0,i.kt)("h2",{id:"get-query"},(0,i.kt)("inlineCode",{parentName:"h2"},"GET /?<query>")),(0,i.kt)("p",null,"Get the content of the stencil nodes selected by the JMESPath expression ",(0,i.kt)("inlineCode",{parentName:"p"},"<query>"),". Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"404")," if no nodes selected. Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"select")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"lang: jmespath"),"."),(0,i.kt)("h2",{id:"post-"},(0,i.kt)("inlineCode",{parentName:"h2"},"POST /")),(0,i.kt)("p",null,"Call a stencil with variables set at the values in the request body."),(0,i.kt)("h2",{id:"post-method"},(0,i.kt)("inlineCode",{parentName:"h2"},"POST /.<method>")),(0,i.kt)("p",null,"Call a stencil method e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"execute")," with the arguments in the request body."),(0,i.kt)("h2",{id:"get--1"},(0,i.kt)("inlineCode",{parentName:"h2"},"GET /@")),(0,i.kt)("p",null,"Get a list of stencil variables."),(0,i.kt)("h2",{id:"get-name"},(0,i.kt)("inlineCode",{parentName:"h2"},"GET /@<name>")),(0,i.kt)("p",null,"Get the stencil variable with ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),". Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"404")," if no such variable. Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"get"),"."),(0,i.kt)("h2",{id:"post-name"},(0,i.kt)("inlineCode",{parentName:"h2"},"POST /@<name>")),(0,i.kt)("p",null,"Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"set"),"."),(0,i.kt)("h2",{id:"delete-name"},(0,i.kt)("inlineCode",{parentName:"h2"},"DELETE /@<name>")),(0,i.kt)("p",null,"Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"delete"),"."),(0,i.kt)("h2",{id:"get--2"},(0,i.kt)("inlineCode",{parentName:"h2"},"GET /!")),(0,i.kt)("p",null,"Get a list of stencil functions. Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"funcs"),"."),(0,i.kt)("h2",{id:"post-name-1"},(0,i.kt)("inlineCode",{parentName:"h2"},"POST /!<name>")),(0,i.kt)("p",null,"Call the stencil function ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," with arguments in the request body. Method: ",(0,i.kt)("inlineCode",{parentName:"p"},"call"),"."))}s.isMDXComponent=!0}}]);