"use strict";(self.webpackChunk_stencila_help=self.webpackChunk_stencila_help||[]).push([[9678],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(a),u=r,h=p["".concat(d,".").concat(u)]||p[u]||m[u]||l;return a?n.createElement(h,i(i({ref:t},c),{},{components:a})):n.createElement(h,i({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},9599:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>o,contentTitle:()=>d,metadata:()=>s,toc:()=>c,default:()=>p});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={category:"Code",slug:"/schema/CodeExecutable",custom_edit_url:"https://github.com/stencila/schema/edit/master/schema/CodeExecutable.schema.yaml"},d="Code Executable",s={unversionedId:"schema/docs/CodeExecutable",id:"schema/docs/CodeExecutable",title:"Code Executable",description:"Base type for executable code nodes (i.e. CodeChunk and CodeExpression).",source:"@site/references/schema/docs/CodeExecutable.md",sourceDirName:"schema/docs",slug:"/schema/CodeExecutable",permalink:"/references/schema/CodeExecutable",editUrl:"https://github.com/stencila/schema/edit/master/schema/CodeExecutable.schema.yaml",tags:[],version:"current",frontMatter:{category:"Code",slug:"/schema/CodeExecutable",custom_edit_url:"https://github.com/stencila/schema/edit/master/schema/CodeExecutable.schema.yaml"},sidebar:"sidebar",previous:{title:"Code Error",permalink:"/references/schema/CodeError"},next:{title:"Code Executable Types",permalink:"/references/schema/CodeExecutableTypes"}},c=[{value:"Properties",id:"properties",children:[],level:2},{value:"Notes",id:"notes",children:[],level:2},{value:"Related",id:"related",children:[],level:2},{value:"Available as",id:"available-as",children:[],level:2},{value:"Source",id:"source",children:[],level:2}],m={toc:c};function p(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"code-executable"},"Code Executable"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Base type for executable code nodes (i.e. ",(0,l.kt)("inlineCode",{parentName:"strong"},"CodeChunk")," and ",(0,l.kt)("inlineCode",{parentName:"strong"},"CodeExpression"),").")),(0,l.kt)("p",null,"Adds properties to the base ",(0,l.kt)("inlineCode",{parentName:"p"},"Code")," node type that are necessary, or useful, for executable code. Also makes the ",(0,l.kt)("inlineCode",{parentName:"p"},"programmingLanguage")," property required since that is necessary to be able to execute it. "),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"@id")),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Inherited from"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"programmingLanguage")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.org/programmingLanguage"},"schema:programmingLanguage")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The programming language of the code."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/Code"},"Code"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"text")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.org/text"},"schema:text")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The text of the code."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/Code"},"Code"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"codeDependencies"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/codeDependencies.jsonld"},"stencila:codeDependencies")),(0,l.kt)("td",{parentName:"tr",align:null},"Array of (",(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeChunk"},"CodeChunk")," ",(0,l.kt)("em",{parentName:"td"},"or")," ",(0,l.kt)("a",{parentName:"td",href:"/references/schema/Parameter"},"Parameter"),")"),(0,l.kt)("td",{parentName:"tr",align:null},"The upstream dependencies of the code. See note ",(0,l.kt)("a",{parentName:"td",href:"#notes"},"1"),"."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"codeDependents"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/codeDependents.jsonld"},"stencila:codeDependents")),(0,l.kt)("td",{parentName:"tr",align:null},"Array of (",(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeChunk"},"CodeChunk")," ",(0,l.kt)("em",{parentName:"td"},"or")," ",(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExpression"},"CodeExpression"),")"),(0,l.kt)("td",{parentName:"tr",align:null},"The downstream dependents of the code. See note ",(0,l.kt)("a",{parentName:"td",href:"#notes"},"2"),"."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"compileDigest"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/compileDigest.jsonld"},"stencila:compileDigest")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"A digest of the content, semantics and dependencies of the node."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"errors"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/errors.jsonld"},"stencila:errors")),(0,l.kt)("td",{parentName:"tr",align:null},"Array of ",(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeError"},"CodeError")),(0,l.kt)("td",{parentName:"tr",align:null},"Errors when compiling (e.g. syntax errors) or executing the chunk."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"executeCount"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/executeCount.jsonld"},"stencila:executeCount")),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},"A count of the number of times that the node has been executed. See note ",(0,l.kt)("a",{parentName:"td",href:"#notes"},"3"),"."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"executeDigest"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/executeDigest.jsonld"},"stencila:executeDigest")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("inlineCode",{parentName:"td"},"compileDigest")," of the node when it was last executed."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"executeDuration"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/executeDuration.jsonld"},"stencila:executeDuration")),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"Duration in seconds of the last execution of the code."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"executeEnded"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/executeEnded.jsonld"},"stencila:executeEnded")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/Date"},"Date")),(0,l.kt)("td",{parentName:"tr",align:null},"The date-time that the the last execution of the code ended."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"executeRequired"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/executeRequired.jsonld"},"stencila:executeRequired")),(0,l.kt)("td",{parentName:"tr",align:null},"'No', 'NeverExecuted', 'SemanticsChanged', 'DependenciesChanged', 'DependenciesFailed'"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether, and why, a node requires execution or re-execution. See note ",(0,l.kt)("a",{parentName:"td",href:"#notes"},"4"),"."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"executeStatus"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/executeStatus.jsonld"},"stencila:executeStatus")),(0,l.kt)("td",{parentName:"tr",align:null},"'Scheduled', 'ScheduledPreviouslyFailed', 'Running', 'RunningPreviouslyFailed', 'Succeeded', 'Failed', 'Cancelled'"),(0,l.kt)("td",{parentName:"tr",align:null},"Status of the most recent, including any current, execution of the code."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/CodeExecutable"},"CodeExecutable"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.org/id"},"schema:id")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The identifier for this item."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/Entity"},"Entity"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mediaType"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.org/encodingFormat"},"schema:encodingFormat")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Media type, typically expressed using a MIME format, of the code. See note ",(0,l.kt)("a",{parentName:"td",href:"#notes"},"5"),"."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/Code"},"Code"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"meta"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/meta.jsonld"},"stencila:meta")),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"Metadata associated with this item."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/Entity"},"Entity"))))),(0,l.kt)("h2",{id:"notes"},"Notes"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"codeDependencies")," : Note that this excludes ",(0,l.kt)("inlineCode",{parentName:"li"},"CodeExpression")," nodes since they should not have side effects (e.g. assigning variables) that would cause another node to be dependent upon them."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"codeDependents")," : Note that in comparison to ",(0,l.kt)("inlineCode",{parentName:"li"},"codeDependencies"),", this property does not allow for ",(0,l.kt)("inlineCode",{parentName:"li"},"Parameter")," dependents (because parameters are never dependent upon others)."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"executeCount")," : Intended to increment with each successive execution of the node, including across sessions. Note that this differs to the ",(0,l.kt)("inlineCode",{parentName:"li"},"execution_count"),' in Jupyter Notebook format which is the "code cell\'s prompt number" and which resets at the start of each new session.'),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"executeRequired")," : Derived from a comparison of ",(0,l.kt)("inlineCode",{parentName:"li"},"compileDigest")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"executeDigest")," and the ",(0,l.kt)("inlineCode",{parentName:"li"},"executeStatus")," of dependencies. ",(0,l.kt)("inlineCode",{parentName:"li"},"No"),": no re-execution is required, the semantics of the code and its dependencies has not changed since it was last executed. ",(0,l.kt)("inlineCode",{parentName:"li"},"NeverExecuted"),": execution is required because the code has never been executed (or any previous execution was not persisted in its state). ",(0,l.kt)("inlineCode",{parentName:"li"},"SemanticsChanged"),": re-execution is required because the semantics of the code has changed since it was last executed. ",(0,l.kt)("inlineCode",{parentName:"li"},"DependenciesChanged"),": the semantics of one or more dependencies (including transitive dependencies)  changed since it was last executed. ",(0,l.kt)("inlineCode",{parentName:"li"},"DependenciesFailed"),": one or more dependencies (including transitive dependencies) failed when it was last executed."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"mediaType")," : This property allows the differentiation of formats using the same programming language or variants of a programming language. An example is using ",(0,l.kt)("inlineCode",{parentName:"li"},"programmingLanguage"),' "json" and ',(0,l.kt)("inlineCode",{parentName:"li"},"encodingFormat"),' "application/ld+json" for JSON-LD code examples.')),(0,l.kt)("h2",{id:"related"},"Related"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Parent: ",(0,l.kt)("a",{parentName:"li",href:"/references/schema/Code"},"Code")),(0,l.kt)("li",{parentName:"ul"},"Descendants: ",(0,l.kt)("a",{parentName:"li",href:"/references/schema/CodeChunk"},"CodeChunk"),", ",(0,l.kt)("a",{parentName:"li",href:"/references/schema/CodeExpression"},"CodeExpression"))),(0,l.kt)("h2",{id:"available-as"},"Available as"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://schema.stenci.la/CodeExecutable.jsonld"},"JSON-LD")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://schema.stenci.la/v1/CodeExecutable.schema.json"},"JSON Schema")),(0,l.kt)("li",{parentName:"ul"},"Python ",(0,l.kt)("a",{parentName:"li",href:"https://stencila.github.io/schema/python/docs/types.html#schema.types.CodeExecutable"},(0,l.kt)("inlineCode",{parentName:"a"},"class CodeExecutable"))),(0,l.kt)("li",{parentName:"ul"},"TypeScript ",(0,l.kt)("a",{parentName:"li",href:"https://stencila.github.io/schema/ts/docs/interfaces/codeexecutable.html"},(0,l.kt)("inlineCode",{parentName:"a"},"interface CodeExecutable"))),(0,l.kt)("li",{parentName:"ul"},"R ",(0,l.kt)("a",{parentName:"li",href:"https://cran.r-project.org/web/packages/stencilaschema/stencilaschema.pdf"},(0,l.kt)("inlineCode",{parentName:"a"},"class CodeExecutable"))),(0,l.kt)("li",{parentName:"ul"},"Rust ",(0,l.kt)("a",{parentName:"li",href:"https://docs.rs/stencila-schema/latest/stencila_schema/struct.CodeExecutable.html"},(0,l.kt)("inlineCode",{parentName:"a"},"struct CodeExecutable")))),(0,l.kt)("h2",{id:"source"},"Source"),(0,l.kt)("p",null,"This documentation was generated from ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/stencila/schema/blob/master/schema/CodeExecutable.schema.yaml"},"CodeExecutable.schema.yaml"),"."))}p.isMDXComponent=!0}}]);