"use strict";(self.webpackChunk_stencila_help=self.webpackChunk_stencila_help||[]).push([[5007],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=n,h=m["".concat(s,".").concat(u)]||m[u]||p[u]||l;return a?r.createElement(h,i(i({ref:t},d),{},{components:a})):r.createElement(h,i({ref:t},d))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1545:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>o,contentTitle:()=>s,metadata:()=>c,toc:()=>d,default:()=>m});var r=a(7462),n=a(3366),l=(a(7294),a(3905)),i=["components"],o={category:"Data",slug:"/schema/ValidatorTypes",custom_edit_url:"https://github.com/stencila/schema"},s="Validator Types",c={unversionedId:"schema/docs/ValidatorTypes",id:"schema/docs/ValidatorTypes",isDocsHomePage:!1,title:"Validator Types",description:"All type schemas that are derived from Validator",source:"@site/references/schema/docs/ValidatorTypes.md",sourceDirName:"schema/docs",slug:"/schema/ValidatorTypes",permalink:"/references/schema/ValidatorTypes",editUrl:"https://github.com/stencila/schema",tags:[],version:"current",frontMatter:{category:"Data",slug:"/schema/ValidatorTypes",custom_edit_url:"https://github.com/stencila/schema"},sidebar:"sidebar",previous:{title:"Validator",permalink:"/references/schema/Validator"},next:{title:"Brand",permalink:"/references/schema/Brand"}},d=[{value:"Members",id:"members",children:[],level:2},{value:"Available as",id:"available-as",children:[],level:2}],p={toc:d};function m(e){var t=e.components,a=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"validator-types"},"Validator Types"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"All type schemas that are derived from Validator")),(0,l.kt)("p",null,"This schema type is marked as ",(0,l.kt)("strong",{parentName:"p"},"experimental")," \ud83e\uddea and is subject to change."),(0,l.kt)("h2",{id:"members"},"Members"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"@id"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/Validator.jsonld"},"stencila:Validator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/Validator"},"Validator")),(0,l.kt)("td",{parentName:"tr",align:null},"A base for all validator types.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/ArrayValidator.jsonld"},"stencila:ArrayValidator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/ArrayValidator"},"ArrayValidator")),(0,l.kt)("td",{parentName:"tr",align:null},"A validator specifying constraints on an array node.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/BooleanValidator.jsonld"},"stencila:BooleanValidator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/BooleanValidator"},"BooleanValidator")),(0,l.kt)("td",{parentName:"tr",align:null},"A schema specifying that a node must be a boolean value.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/ConstantValidator.jsonld"},"stencila:ConstantValidator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/ConstantValidator"},"ConstantValidator")),(0,l.kt)("td",{parentName:"tr",align:null},"A validator specifying a constant value that a node must have.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/EnumValidator.jsonld"},"stencila:EnumValidator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/EnumValidator"},"EnumValidator")),(0,l.kt)("td",{parentName:"tr",align:null},"A schema specifying that a node must be one of several values.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/IntegerValidator.jsonld"},"stencila:IntegerValidator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/IntegerValidator"},"IntegerValidator")),(0,l.kt)("td",{parentName:"tr",align:null},"A validator specifying the constraints on an integer node.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/NumberValidator.jsonld"},"stencila:NumberValidator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/NumberValidator"},"NumberValidator")),(0,l.kt)("td",{parentName:"tr",align:null},"A validator specifying the constraints on a numeric node.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/StringValidator.jsonld"},"stencila:StringValidator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/StringValidator"},"StringValidator")),(0,l.kt)("td",{parentName:"tr",align:null},"A schema specifying constraints on a string node.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://schema.stenci.la/TupleValidator.jsonld"},"stencila:TupleValidator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/references/schema/TupleValidator"},"TupleValidator")),(0,l.kt)("td",{parentName:"tr",align:null},"A validator specifying constraints on an array of heterogeneous items.")))),(0,l.kt)("h2",{id:"available-as"},"Available as"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://schema.stenci.la/stencila.jsonld"},"JSON-LD")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://schema.stenci.la/v1/ValidatorTypes.schema.json"},"JSON Schema"))))}m.isMDXComponent=!0}}]);